*~ 'empty state + an op' ?
		*rga#textB!
		*rga#textB@time'A';
*~ 'produces a state' !
		*rga#textB@time!@'A'

*~ 'a state plus an op'?
		*rga#test@1!@'A'
		*rga#test@2:1'B'
*~ 'produces a merged state'!
		*rga#test@2!@1'A'@2'B'

*~ 'an op plus another op'?
		*rga#test@2:1'B';
		*rga#test@3:2'C';
*~ 'form a subtree patch'!
		*rga#test@3:1!@2:0'B'@3'C'

*~ 'a state plus a patch'?
		*rga#test@1!@'A'
		*rga#test@2:1!:0'B'
*~ 'produces a merged state'!
		*rga#test@2!@1'A'@2'B'

*~ 'a patch plus a patch'?
		*rga#test@2:1!:0'B'
		*rga#test@3:2!:0'C'
*~ 'a merged patch'!
		*rga#test@3:1!@2:0'B'@3'C'

*~ 'a state plus a later state'?
		*rga#test@1!@'A'
		*rga#test@2!@1'A'@2'B'
*~ 'the later state'!
		*rga#test@2!@1'A'@2'B'

*~ 'two diverged states'?
		*rga#test@2!@1'A'@2'B'
		*rga#test@3!@1'A'@3'C'
*~ 'a merged state'!
		*rga#test@3!@1'A'@3'C'@2'B'

*~ 'state + state with a new rm'?
		*rga#test@2!@1'A'@2'B'
		*rga#test@4!@1:4'A'@3:0'C'
*~ 'rm applied'
		*rga#test@4!@1:4'A'@3:0'C'@2'B'

*~ 'an op and a backspace rm'?
		*rga#test@2:1'B';
		*rga#test@3:2;
*~ 'a patch, rm applied'!
		*rga#test@3:1!@2:3'B'

*~ 'a patch and a backspace rm'?
		*rga#test@3:1!@2:0'B'@3'C'
		*rga#test@4:2;
*~ 'a patch with the rm applied'!
		*rga#test@4:1!@2:4'B'@3:0'C'

*~ 'a state and an rm-patch'?
		*rga#test@2!@1'A'@2'B'
		*rga#test@4:rm!@3:1,@4:2,
*~ 'a state with all rms applied'!
		*rga#test@4!@1:3'A'@2:4'B'

*~ 'diverged states with concurrent rms and stuff'?
		*rga#test@5!@1:4a'A'@2:5'B'
		*rga#test@4!@1:4'A'@3:0'C'
*~ 'a merged state'!
		*rga#test@4!@1:4a'A'@3:0'C'@2:5'B'

*~ 'two states diverged in a convoluted way'?
		*rga#test@3!@1:4a'A'@3:0'C'@2:5'B'
		*rga#test@4!@1:4a'A'@3:0'C'@4:0'D'@2:5'B'
*~ 'merged'!
		*rga#test@4!@1:4a'A'@3:0'C'@4'D'@2:5'B'

*~ 'even more convoluted divergence'?
		*rga#test@5!@1:4a'A'@5:0'E'@3:0'C'@2:5'B'
		*rga#test@7!@1:4a'A'@6:0'F'@3:7'C'@4:0'D'@2:5'B'
*~ 'merged'!
		*rga#test@7!@1:4a'A'@6:0'F'@5'E'@3:7'C'@4:0'D'@2:5'B'

*~ 'a state and an insert op'?
		*rga#test@2!@1'A'@2'B'
		*rga#test@3:1'-';
*~ 'inserted properly'!
		*rga#test@3!@1'A'@3'-'@2'B'

*~ 'rm eclipsed by a concurrent rm'?
		*rga#test@4!@1'A'@2:4'B'
		*rga#test@3:2;
*~ 'skipped'!
		*rga#test@3!@1'A'@2:4'B'

*~'reorders: unapplicable remove'?
		*rga#test@2!@1'A'@2'B'
		*rga#test@4:3;
*~ 'the rm is stashed in a separate rm frame'!
		*rga#test@4!@1'A'@2'B'@4:rm!:3,

*~ 'for a stashed remove, the target arrives'?
		*rga#test@4!@1'A'@2'B'@4:rm!:3,
		*rga#test@3:2'C'
*~ 'target removed'!
		*rga#test@3!@1'A'@2'B'@3:4'C'

*~ 'unapplicable patch'?
		*rga#test@2!@1'A'@2'B'
		*rga#test@5:3!@4:0'D'@5'E'
*~ 'the patch goes into a separate frame'!
		*rga#test@5!@1'A'@2'B'@5:3!@4:0'D'@5'E'

*~ 'the stashed patch becomes applicable (teh missing link arrives)'?
		*rga#test@2!@1'A'@2'B'@5:3!@4:0'D'@5'E'
		*rga#test@3:2'C';
*~ 'the patch is applied'!
		*rga#test@3!@1'A'@2'B'@3'C'@4'D'@5'E'

*~ 'an unappliecable patch with its own rm stash'?
		*rga#test@2!@1'A'@2'B'
		*rga#test@6:3!@4:0'D'@5'E'@6:rm!:3,
*~ 'all separate frames'!
		*rga#test@6!@1'A'@2'B'@6:3!@4:0'D'@5'E'@6:rm!:3,

*~ 'unapplied frames become applicable'?
		*rga#test@6!@1'A'@2'B'@6:3!@4:0'D'@5'E'@6:rm!:3,
		*rga#test@3:2!@'C'
*~ 'all applied'!
		*rga#test@3!@1'A'@2'B'@3:6'C'@4:0'D'@5'E'

