#!/usr/bin/perl

$PREAMBLE="package ron\n\n\nvar PUNCT, BITS [128]int8\n".
    "// bit-separator conversions generated by $0 on\n// ".`date`."// from\n";
$POSTAMBLE = "\n";
$CHAR_TYPE = "const";
$INT_TYPE = "const";
$STRING_TYPE = "var ";

$commit = `git log -n 1`;
$commit =~ s/^(.*)$/\/\/ $1/gm;
@ABC = ( (-1) x 128 );
@CBA = ( (-1) x 128 );
$k = 0;

print $PREAMBLE . $commit . "\n";

while (<> =~ /^(\w+)\s+([^\s]+)\s+(.*)$/) {
    my $name = $1;
    my $seps = $2;
    my @vals = split(/\s+/, $3);
    $k++;
    print $INT_TYPE." ".$name."_KIND = ".$k.";\n";

    $escseps = $seps;
    $escseps =~ s/(["\\])/\\$1/g;
    print $STRING_TYPE." ".$name."_PUNCT = []byte(\"$escseps\");\n";

    my $i = 0;
    for my $kind (@vals) {
        my $ch = substr($seps,$i,1);
        @ABC[ord($ch)] = $i if @ABC[ord($ch)]==-1;
        @CBA[ord($ch)] = $k if @CBA[ord($ch)]==-1;
        $i++;
        if ($ch eq "'" || $ch eq "\\") {
            $ch = "\\$ch"
        }
        print $CHAR_TYPE." "."$name"."_".$kind."_SEP = '$ch';\n";
    }

    my $i = 0;
    for my $kind (@vals) {
        print $INT_TYPE." $name"."_".$kind." = $i;\n";
        $i++
    }


    print "\n\n";
}

print "var ABC = [128]int8{" . join(",", @ABC). "};\n\n";
print "var ABC_KIND = [128]int8{" . join(",", @CBA). "};\n\n";

print $POSTAMBLE."\n";
